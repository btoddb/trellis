<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:util="http://www.springframework.org/schema/util"

	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.0.xsd
		"> <!-- beans -->

	<!-- scan for @Components (ie @service, @repository, etc) -->
	<context:component-scan
		base-package="com.btoddb.trellis.common, com.btoddb.trellis.client" />

    <bean id="trellisConfig" class="com.btoddb.trellis.common.TrellisConfig">
        <property name="trellisInitializedAndReady" value="false" />
    </bean>
    
	<bean id="gridConnMgr" class="com.btoddb.trellis.client.NettyConnectionManager"
		init-method="init">
		<property name="objEncoder" ref="trellisObjectEncoder" />
		<property name="objDecoder" ref="trellisObjectDecoder" />
		<property name="clientHandler" ref="gridClientHandler" />
		<property name="jmxBean" ref="clientStatsJmxBean" />
	</bean>

	<bean id="gridClientHandler" class="com.btoddb.trellis.client.NettyClientHandler">
		<property name="finalizeQueue" ref="sessionFinalizerQueue" />
		<property name="gridSessionMgr" ref="gridSessionMgr" />
	</bean>

	<bean id="gridSessionMgr" class="com.btoddb.trellis.client.TrellisSessionMgr" />

	<bean id="trellisObjectEncoder" class="com.btoddb.trellis.client.TrellisObjectEncoder">
		<property name="serSrvc" ref="serSrvc" />
	</bean>
	<bean id="trellisObjectDecoder" class="com.btoddb.trellis.client.TrellisObjectDecoder">
		<property name="serSrvc" ref="serSrvc" />
	</bean>

	<bean id="sessionFinalizerQueue" class="com.btoddb.trellis.client.NoOpQueue" />

	<bean id="nodeDiscoveryService" class="com.btoddb.trellis.client.NodeDiscoveryRemoteService">
		<property name="gridClient" ref="gridClient" />
		<property name="serSrvc" ref="serSrvc" />
	</bean>

	<bean id="clientStatsJmxBean" class="com.btoddb.trellis.common.TrellisStatsJmxBean" />

	<!-- JMX setup -->
	<bean id="jmxClientMBeanServer" class="org.springframework.jmx.support.MBeanServerFactoryBean">
		<property name="locateExistingServerIfPossible" value="true" />
	</bean>
	<bean id="jmxClientExporter" class="org.springframework.jmx.export.MBeanExporter"
		lazy-init="false">
		<property name="beans">
			<map>
				<entry key="trellis-client:name=messaging-stats" value-ref="clientStatsJmxBean" />
			</map>
		</property>
		<property name="assembler" ref="jmxClientAssembler" />
		<property name="namingStrategy" ref="jmxClientNamingStrategy" />
<!-- 		<property name="autodetect" value="true" /> -->
		<property name="server" ref="jmxClientMBeanServer" />
	</bean>

	<bean id="jmxClientAttributeSource"
		class="org.springframework.jmx.export.annotation.AnnotationJmxAttributeSource" />

	<!-- will create management interface using annotation metadata -->
	<bean id="jmxClientAssembler"
		class="org.springframework.jmx.export.assembler.MetadataMBeanInfoAssembler">
		<property name="attributeSource" ref="jmxClientAttributeSource" />
	</bean>

	<!-- will pick up the ObjectName from the annotation -->
	<bean id="jmxClientNamingStrategy"
		class="org.springframework.jmx.export.naming.MetadataNamingStrategy">
		<property name="attributeSource" ref="jmxClientAttributeSource" />
	</bean>

	<!-- property files -->
	<bean id="gridProps"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="placeholderPrefix" value="$gridProps{" />
		<property name="locations">
			<list>
				<value>trellis-client.properties</value>
			</list>
		</property>
		<property name="properties">
			<props>
				<prop key="start-node-discovery">true</prop>
				<prop key="server-mode">false</prop>
			</props>
		</property>
	</bean>

</beans>
